buildscript {
    ext {
        kotlinVersion = '1.3.71'
        kotlinGeneratedVersion = '1.5.0'
    }

    repositories {
        mavenCentral()
        maven { url 'https://plugins.gradle.org/m2/' }
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
        classpath "org.jetbrains.kotlin:kotlin-allopen:$kotlinVersion"
        classpath "org.jetbrains.kotlin:kotlin-noarg:$kotlinVersion"
        classpath "nl.fabianm.kotlin.plugin.generated:plugin-gradle:$kotlinGeneratedVersion"
    }
}

subprojects {
    apply plugin: 'jacoco'
    apply plugin: 'kotlin'
    apply plugin: 'maven-publish'
    apply plugin: 'nl.fabianm.kotlin.plugin.generated'

    group 'com.github.danzx.xof'
    version '1.0-SNAPSHOT'
    sourceCompatibility = JavaVersion.VERSION_11

    repositories {
        mavenCentral()
        maven { url 'https://jitpack.io' }
        maven { url 'https://plugins.gradle.org/m2/' }
    }

    ext {
        jacksonVersion = '2.10.1'
        junitVersion = '5.6.0'
        kotlinTestVersion = '3.4.2'
        kxdateVersion = '1.0.0'
        logbackVersion = '1.2.3'
        mockkVersion = '1.9.3'
        okHttpVersion = '3.14.7'
        retrofitVersion = '2.7.2'
        slf4jVersion = '1.7.30'
        springBootVersion = '2.2.5.RELEASE'
    }

    dependencies {
        api "com.github.yongjhih.kxdate:kxdate:$kxdateVersion"
        api "org.jetbrains.kotlin:kotlin-stdlib:$kotlinVersion"
        api "org.jetbrains.kotlin:kotlin-reflect:$kotlinVersion"
        api "org.slf4j:slf4j-api:$slf4jVersion"

        testImplementation "ch.qos.logback:logback-classic:$logbackVersion"
        testImplementation "io.kotlintest:kotlintest-runner-junit5:$kotlinTestVersion"
        testImplementation "org.junit.jupiter:junit-jupiter-api:$junitVersion"
        testImplementation "org.junit.jupiter:junit-jupiter-params:$junitVersion"
        testImplementation "io.mockk:mockk:$mockkVersion"

        testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$junitVersion"
    }

    compileKotlin {
        kotlinOptions.freeCompilerArgs = ['-Xjsr305=strict', "-Xinline-classes"]
        kotlinOptions.jvmTarget = JavaVersion.VERSION_11
    }

    compileTestKotlin {
        kotlinOptions.freeCompilerArgs = ['-Xjsr305=strict']
        kotlinOptions.jvmTarget = JavaVersion.VERSION_11
    }

    test {
        useJUnitPlatform()
    }

    jacoco {
        toolVersion = '0.8.5'
    }

    jacocoTestReport {
        reports {
            xml.enabled = true
            html.enabled = true
        }

        afterEvaluate {
            classDirectories.from = files(classDirectories.files.collect {
                fileTree(dir: it, exclude: jacocoExcludes)
            })
        }
    }

    task sourceJar(type: Jar) {
        from sourceSets.main.allJava
    }

    publishing {
        repositories {
            maven {
                name = "GitHubPackages"
                url = uri("https://maven.pkg.github.com/dan-zx/xof-api-client")
                credentials {
                    username = System.getenv("USERNAME")
                    password = System.getenv("TOKEN")
                }
            }
        }
        publications {
            mavenJava(MavenPublication) {
                from components.java

                artifact sourceJar {
                    classifier "sources"
                }
            }
        }
    }
}

wrapper {
    gradleVersion = '5.6.4'
}
